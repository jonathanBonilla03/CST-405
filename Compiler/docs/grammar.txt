# C-Minus Grammar Specification
# Based on the C-Minus language definition
# CST-405 Compiler Design

# Program Structure
program → declaration-list

declaration-list → declaration-list declaration | declaration

declaration → var-declaration | fun-declaration

# Variable Declarations
var-declaration → type-specifier ID ; | type-specifier ID [ NUM ] ;

type-specifier → int | void

# Function Declarations
fun-declaration → type-specifier ID ( params ) compound-stmt

params → param-list | void

param-list → param-list , param | param

param → type-specifier ID | type-specifier ID [ ]

# Statements
compound-stmt → { local-declarations statement-list }

local-declarations → local-declarations var-declaration | empty

statement-list → statement-list statement | empty

statement → expression-stmt | compound-stmt | selection-stmt 
          | iteration-stmt | return-stmt

expression-stmt → expression ; | ;

selection-stmt → if ( expression ) statement
               | if ( expression ) statement else statement

iteration-stmt → while ( expression ) statement

return-stmt → return ; | return expression ;

# Expressions
expression → var = expression | simple-expression

var → ID | ID [ expression ]

simple-expression → additive-expression relop additive-expression 
                  | additive-expression

relop → <= | < | > | >= | == | !=

additive-expression → additive-expression addop term | term

addop → + | -

term → term mulop factor | factor

mulop → * | /

factor → ( expression ) | var | call | NUM

call → ID ( args )

args → arg-list | empty

arg-list → arg-list , expression | expression

# Terminals
ID → letter (letter | digit)*
NUM → digit digit*
letter → a | ... | z | A | ... | Z
digit → 0 | 1 | ... | 9

# Comments
Comments: /* ... */ (C-style block comments)